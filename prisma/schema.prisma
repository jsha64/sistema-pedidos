// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("customer")
  createdAt DateTime @default(now())

  orders Order[]
}

model Restaurant {
  id        String      @id @default(uuid())
  name      String
  address   String?
  createdAt DateTime @default(now())

  orders  Order[] // Relaci√≥n con pedidos
  Product Product[]
}

model Product {
  id           String        @id @default(uuid())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  name         String
  description  String?
  price        Float
  available    Boolean    @default(true)
  createdAt    DateTime   @default(now())

  orderItems OrderItem[]
}

model Order {
  id           String        @id @default(uuid())
  user         User?      @relation(fields: [userId], references: [id])
  userId       String?
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  total        Float
  status       String     @default("pending")
  createdAt    DateTime   @default(now())

  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  subtotal  Float
}
